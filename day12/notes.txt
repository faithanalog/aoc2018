5: KILL
##### => .



4: STABLE
####. => #
###.# => #
##.## => .
#.### => #
.#### => #

3
###.. => #
##..# => #
#..## => #
..### => .

#.#.# => #
.###. => #

.##.# => #
#.##. => .

.#.## => #
##.#. => .



2
##... => #
#..#. => #
.#..# => #
..##. => #
..#.# => #

.#.#. => .
#.#.. => .
#...# => .
.##.. => .
...## => .

1
.#... => #
..#.. => #
...#. => #

#.... => .
....# => .

0
..... => .


# Observations

A single plant will grow into a group of three.
A group of three will travel right.

.....#.....
....###....
.....###...
......###..


A glider than comes across a single plant will generate another glider over 5
steps

......................................###.#....................................
.......................................##..#...................................
.......................................#.####..................................
......................................########.................................
.......................................#....###................................
......................................###....###...............................


A glider with 2-4 empty spaces between it and a single plant on the right will
generate 2 more gliders over 13 steps.


Here is ###..#

.....................................###..#....................................
......................................######...................................
.......................................#..###..................................
......................................####.###.................................
.......................................###.####................................
........................................##.#####...............................
........................................##.##.###..............................
........................................##..#.####.............................
........................................#.#########............................
.......................................#####.....###...........................
........................................#.###.....###..........................
.......................................#######.....###.........................
........................................#...###.....###........................
.......................................###...###.....###.......................

###...# and ###....# are just shifted right

Once a glider exists, it can be stepped forward to any step in O(1) time, and
the calculation area can be shrunk to exclude it.

The plants will eventually work their way into a generator:

..........##.##..........###..........###..........###..........###..........##
..........##...#..........###..........###..........###..........###..........#
..........#.#.###..........###..........###..........###..........###..........
.........##.######..........###..........###..........###..........###.........
.........##.##..###..........###..........###..........###..........###........
.........##...##.###..........###..........###..........###..........###.......
.........#.#..##.####..........###..........###..........###..........###......
........##..####.#####..........###..........###..........###..........###.....
........#.##.###.##.###..........###..........###..........###..........###....
.......###.#.###..#.####..........###..........###..........###..........###...
........##.##############..........###..........###..........###..........###..
........##.##..........###..........###..........###..........###..........###.
........##...#..........###..........###..........###..........###..........###
........#.#.###..........###..........###..........###..........###..........##
.......##.######..........###..........###..........###..........###..........#
.......##.##..###..........###..........###..........###..........###..........
.......##...##.###..........###..........###..........###..........###.........
.......#.#..##.####..........###..........###..........###..........###........
......##..####.#####..........###..........###..........###..........###.......
......#.##.###.##.###..........###..........###..........###..........###......
.....###.#.###..#.####..........###..........###..........###..........###.....
......##.##############..........###..........###..........###..........###....
......##.##..........###..........###..........###..........###..........###...
......##...#..........###..........###..........###..........###..........###..
......#.#.###..........###..........###..........###..........###..........###.
.....##.######..........###..........###..........###..........###..........###
.....##.##..###..........###..........###..........###..........###..........##
.....##...##.###..........###..........###..........###..........###..........#
.....#.#..##.####..........###..........###..........###..........###..........
....##..####.#####..........###..........###..........###..........###.........
....#.##.###.##.###..........###..........###..........###..........###........
...###.#.###..#.####..........###..........###..........###..........###.......
....##.##############..........###..........###..........###..........###......
....##.##..........###..........###..........###..........###..........###.....
....##...#..........###..........###..........###..........###..........###....

The final generator seed is a ##.## at the far left boundary, followed by five
..... to ensure that the right side of it is neutral. From there, all further
waves can be calculated in O(1) time.

Each generator step, the generator position will shift left by two.

So basically the trick will be to run until that generator is reached. Keep
track of the exiting gliders as (Glider spawn point, Glider spawn generation).
Once the generator is detected, calculate the gliders, and the state of the
generator on the final step.

Basically it's going to be some sort of mathematical limit with a bit of noise.

The left boundary of the active area can only grow by at most one per step, so
it would make sense to keep the left boundary and focus, and just move it left
or right as needed.


The formula for the final value of a glider:

Given:
    - the left edge of a glider's spawn point, s
    - the spawn generation, g
    - The current generation, c

value(s, g, c) = (s + (c - g)) * 3 + 3



Given
    - Gliders from a generator are evenly spaced, such that s1 - s0 = 13
    - We know how many gliders have been emitted evenly spaced
    - We know the (spawn point, generation) of the last generated glider

v(s, g, c, 1) = value(s, g, c)
v(s, g, c, n) = value(s + 13, g, c)
              = (s + 13 + (c - g)) * 3 + 3
              = (s + (c - g)) * 3 + 3 + 39
              = v(s, g, c, n - 1) + 39
gliderSum(s, g, c, n) = value(s, g, c) * n + 39 * (n - 1)


Given
    - Generators move left 2 for every glider generated
    - Generators create a new glider every 11 steps
    - The left edge of the generator in the ##.## state, s_g
    - The generator spawn generation, g_g
    - The current generation, c

    
numGeneratedGliders(g_g, c) = floor((c - (g_g + 11)) / 11)
    - Note: we have to add 11 to g_g because the first glider is generated
      11 steps after the generator is established

finalGliderSpawnGeneration(g_g, c) = mod(c, 11)

finalGliderSpawnPoint(s_g, g_g, c) = s_g + 15 - (2 * numGeneratedGliders(g_g, c))
    - Note: We add 15 to the edge, because it will be 15 away from the left
      edge of the *next* generator start, but then 2 will get subtracted since
      it's the first generated glider, so we will get s_g + 13, which is what
      we want.


Thus,

Given
    - The left edge of a generator in the ##.## state, s_g
    - The generator spawn generation, g_g
    - The current generation, c

The value of all gliders generated from the generator can be calculated like so:

generatorGliderSum(s_g, g_g, c) = gliderSum(finalGliderSpawnPoint(s_g, g_g, c), finalGliderSpawnGeneration(g_g, c), c, numGeneratedGliders(g_g, c))

So to solve the problem, we take the sum of all the gliders generated up to the
existence of the generator, the sum of the gliders generated by the generator,
and the final state of the generator.
